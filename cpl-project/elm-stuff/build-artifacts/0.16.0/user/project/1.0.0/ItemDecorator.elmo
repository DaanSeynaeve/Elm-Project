Elm.ItemDecorator = Elm.ItemDecorator || {};
Elm.ItemDecorator.make = function (_elm) {
   "use strict";
   _elm.ItemDecorator = _elm.ItemDecorator || {};
   if (_elm.ItemDecorator.values) return _elm.ItemDecorator.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $MailItem = Elm.MailItem.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $ReminderItem = Elm.ReminderItem.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Time = Elm.Time.make(_elm);
   var _op = {};
   var lblPinned = function (state) {
      return $Html.text(state.pinned ? "Unpin" : "Pin");
   };
   var lblDone = function (state) {
      return $Html.text(state.done ? "Undo" : "Done");
   };
   var ReminderAction = function (a) {
      return {ctor: "ReminderAction",_0: a};
   };
   var MailAction = function (a) {
      return {ctor: "MailAction",_0: a};
   };
   var ToggleDone = {ctor: "ToggleDone"};
   var TogglePinned = {ctor: "TogglePinned"};
   var makeDecoration = F2(function (address,model) {
      return _U.list([A2($Html.button,
                     _U.list([A2($Html$Events.onClick,address,TogglePinned)]),
                     _U.list([lblPinned(model)]))
                     ,A2($Html.button,
                     _U.list([A2($Html$Events.onClick,address,ToggleDone)]),
                     _U.list([lblDone(model)]))]);
   });
   var view = F2(function (address,model) {
      var deco = A2(makeDecoration,address,model);
      var decoratedView = function () {
         var _p0 = model.item;
         if (_p0.ctor === "AMail") {
               return A3($MailItem.view,
               deco,
               A2($Signal.forwardTo,address,MailAction),
               _p0._0);
            } else {
               return A2($ReminderItem.view,deco,_p0._0);
            }
      }();
      return A2($Html.div,
      _U.list([$Html$Attributes.$class(model.pinned ? "pinned" : "")]),
      _U.list([decoratedView]));
   });
   var itemEqual = F2(function (model1,model2) {
      var _p1 = {ctor: "_Tuple2",_0: model1.item,_1: model2.item};
      _v1_2: do {
         if (_p1.ctor === "_Tuple2") {
               if (_p1._0.ctor === "AMail") {
                     if (_p1._1.ctor === "AMail") {
                           return A2($MailItem.equal,_p1._0._0,_p1._1._0);
                        } else {
                           break _v1_2;
                        }
                  } else {
                     if (_p1._1.ctor === "AReminder") {
                           return A2($ReminderItem.equal,_p1._0._0,_p1._1._0);
                        } else {
                           break _v1_2;
                        }
                  }
            } else {
               break _v1_2;
            }
      } while (false);
      return false;
   });
   var itemTime = function (model) {
      var _p2 = model.item;
      if (_p2.ctor === "AMail") {
            return _p2._0.date;
         } else {
            return _p2._0.created;
         }
   };
   var decorate = F2(function (t,m) {
      return {item: t(m),pinned: false,done: false};
   });
   var Model = F3(function (a,b,c) {
      return {item: a,pinned: b,done: c};
   });
   var AReminder = function (a) {
      return {ctor: "AReminder",_0: a};
   };
   var AMail = function (a) {    return {ctor: "AMail",_0: a};};
   var update = F2(function (a,model) {
      var _p3 = {ctor: "_Tuple2",_0: a,_1: model.item};
      _v3_4: do {
         if (_p3.ctor === "_Tuple2") {
               switch (_p3._0.ctor)
               {case "TogglePinned": return _U.update(model,
                    {pinned: $Basics.not(model.pinned)});
                  case "ToggleDone": return _U.update(model,
                    {done: $Basics.not(model.done)});
                  case "MailAction": if (_p3._1.ctor === "AMail") {
                          return _U.update(model,
                          {item: AMail(A2($MailItem.update,_p3._0._0,_p3._1._0))});
                       } else {
                          break _v3_4;
                       }
                  default: if (_p3._1.ctor === "AReminder") {
                          return _U.update(model,
                          {item: AReminder(A2($ReminderItem.update,
                          _p3._0._0,
                          _p3._1._0))});
                       } else {
                          break _v3_4;
                       }}
            } else {
               break _v3_4;
            }
      } while (false);
      return model;
   });
   return _elm.ItemDecorator.values = {_op: _op
                                      ,AMail: AMail
                                      ,AReminder: AReminder
                                      ,Model: Model
                                      ,decorate: decorate
                                      ,itemTime: itemTime
                                      ,itemEqual: itemEqual
                                      ,TogglePinned: TogglePinned
                                      ,ToggleDone: ToggleDone
                                      ,MailAction: MailAction
                                      ,ReminderAction: ReminderAction
                                      ,update: update
                                      ,view: view
                                      ,makeDecoration: makeDecoration
                                      ,lblDone: lblDone
                                      ,lblPinned: lblPinned};
};