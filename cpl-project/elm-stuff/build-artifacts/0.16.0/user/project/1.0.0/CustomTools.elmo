Elm.CustomTools = Elm.CustomTools || {};
Elm.CustomTools.make = function (_elm) {
   "use strict";
   _elm.CustomTools = _elm.CustomTools || {};
   if (_elm.CustomTools.values) return _elm.CustomTools.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Date = Elm.Date.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var monthToInt = function (m) {
      var _p0 = m;
      switch (_p0.ctor)
      {case "Jan": return 1;
         case "Feb": return 2;
         case "Mar": return 3;
         case "Apr": return 4;
         case "May": return 5;
         case "Jun": return 6;
         case "Jul": return 7;
         case "Aug": return 8;
         case "Sep": return 9;
         case "Oct": return 10;
         case "Nov": return 11;
         default: return 12;}
   };
   var formatDate = function (date) {
      return A2($Basics._op["++"],
      function (_p1) {
         return $Basics.toString($Date.year(_p1));
      }(date),
      A2($Basics._op["++"],
      "-",
      A2($Basics._op["++"],
      function (_p2) {
         return $Basics.toString(monthToInt($Date.month(_p2)));
      }(date),
      A2($Basics._op["++"],
      "-",
      function (_p3) {
         return $Basics.toString($Date.day(_p3));
      }(date)))));
   };
   var header = function (s) {
      return A2($Html.h2,_U.list([]),_U.list([$Html.text(s)]));
   };
   var nor = F2(function (x,y) {
      return A2(F2(function (x,y) {    return x || y;}),
      $Basics.not(x),
      $Basics.not(y));
   });
   _op["?"] = F2(function ($default,maybe) {
      return A2($Maybe.withDefault,$default,maybe);
   });
   _op["$"] = F2(function (caption,s) {
      return A2($Signal.map,$Debug.watch(caption),s);
   });
   var watchSignal = function (caption) {
      return $Signal.map($Debug.watch(caption));
   };
   var toMaybe = F2(function (a,bool) {
      var _p4 = bool;
      if (_p4 === true) {
            return $Maybe.Just(a);
         } else {
            return $Maybe.Nothing;
         }
   });
   var isDefined = function (maybe) {
      var _p5 = maybe;
      if (_p5.ctor === "Just") {
            return true;
         } else {
            return false;
         }
   };
   var zip = F2(function (xs,ys) {
      return A3($List.map2,
      F2(function (v0,v1) {
         return {ctor: "_Tuple2",_0: v0,_1: v1};
      }),
      xs,
      ys);
   });
   return _elm.CustomTools.values = {_op: _op
                                    ,zip: zip
                                    ,isDefined: isDefined
                                    ,toMaybe: toMaybe
                                    ,watchSignal: watchSignal
                                    ,nor: nor
                                    ,header: header
                                    ,monthToInt: monthToInt
                                    ,formatDate: formatDate};
};