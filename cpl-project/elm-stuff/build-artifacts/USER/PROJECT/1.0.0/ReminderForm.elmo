Elm.ReminderForm = Elm.ReminderForm || {};
Elm.ReminderForm.make = function (_elm) {
   "use strict";
   _elm.ReminderForm = _elm.ReminderForm || {};
   if (_elm.ReminderForm.values)
   return _elm.ReminderForm.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "ReminderForm",
   $Basics = Elm.Basics.make(_elm),
   $CustomTools = Elm.CustomTools.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $ItemDecorator = Elm.ItemDecorator.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $ReminderItem = Elm.ReminderItem.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var Deadline = function (a) {
      return {ctor: "Deadline"
             ,_0: a};
   };
   var Created = function (a) {
      return {ctor: "Created"
             ,_0: a};
   };
   var Body = function (a) {
      return {ctor: "Body",_0: a};
   };
   var Clear = {ctor: "Clear"};
   var localbox = $Signal.mailbox(Clear);
   var localmail = localbox.signal;
   var makeReminder = function (model) {
      return A2($ItemDecorator.decorate,
      $ItemDecorator.AReminder,
      $ReminderItem.initNew(model));
   };
   var view = F2(function (address,
   _v0) {
      return function () {
         switch (_v0.ctor)
         {case "_Tuple3":
            return function () {
                 var model = {ctor: "_Tuple3"
                             ,_0: _v0._0
                             ,_1: _v0._1
                             ,_2: _v0._2};
                 var tag = function (x) {
                    return $Signal.message(A2($Signal.forwardTo,
                    localbox.address,
                    x));
                 };
                 return A2($Html.div,
                 _L.fromArray([$Html$Attributes.id("reminder-form")]),
                 _L.fromArray([$CustomTools.header("Add Reminder")
                              ,A2($Html.textarea,
                              _L.fromArray([A3($Html$Events.on,
                                           "input",
                                           $Html$Events.targetValue,
                                           tag(Body))
                                           ,$Html$Attributes.value(_v0._0)
                                           ,$Html$Attributes.rows(2)
                                           ,$Html$Attributes.cols(40)
                                           ,$Html$Attributes.$class("big")]),
                              _L.fromArray([]))
                              ,A2($Html.input,
                              _L.fromArray([A3($Html$Events.on,
                                           "input",
                                           $Html$Events.targetValue,
                                           tag(Created))
                                           ,$Html$Attributes.value(_v0._1)
                                           ,$Html$Attributes.type$("date")]),
                              _L.fromArray([]))
                              ,A2($Html.input,
                              _L.fromArray([A3($Html$Events.on,
                                           "input",
                                           $Html$Events.targetValue,
                                           tag(Deadline))
                                           ,$Html$Attributes.value(_v0._2)
                                           ,$Html$Attributes.type$("date")]),
                              _L.fromArray([]))
                              ,A2($Html.button,
                              _L.fromArray([A2($Html$Events.onClick,
                              address,
                              {ctor: "_Tuple2"
                              ,_0: makeReminder(model)
                              ,_1: Clear})]),
                              _L.fromArray([$Html.text("Add")]))]));
              }();}
         _U.badCase($moduleName,
         "between lines 50 and 67");
      }();
   });
   var init = {ctor: "_Tuple3"
              ,_0: ""
              ,_1: ""
              ,_2: ""};
   var update = F2(function (a,
   _v5) {
      return function () {
         switch (_v5.ctor)
         {case "_Tuple3":
            return function () {
                 switch (a.ctor)
                 {case "Body":
                    return {ctor: "_Tuple3"
                           ,_0: a._0
                           ,_1: _v5._1
                           ,_2: _v5._2};
                    case "Clear": return init;
                    case "Created":
                    return {ctor: "_Tuple3"
                           ,_0: _v5._0
                           ,_1: a._0
                           ,_2: _v5._2};
                    case "Deadline":
                    return {ctor: "_Tuple3"
                           ,_0: _v5._0
                           ,_1: _v5._1
                           ,_2: a._0};}
                 _U.badCase($moduleName,
                 "between lines 41 and 45");
              }();}
         _U.badCase($moduleName,
         "between lines 41 and 45");
      }();
   });
   _elm.ReminderForm.values = {_op: _op
                              ,init: init
                              ,makeReminder: makeReminder
                              ,Clear: Clear
                              ,Body: Body
                              ,Created: Created
                              ,Deadline: Deadline
                              ,localbox: localbox
                              ,localmail: localmail
                              ,update: update
                              ,view: view};
   return _elm.ReminderForm.values;
};