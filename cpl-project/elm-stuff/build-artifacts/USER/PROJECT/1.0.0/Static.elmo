Elm.Static = Elm.Static || {};
Elm.Static.make = function (_elm) {
   "use strict";
   _elm.Static = _elm.Static || {};
   if (_elm.Static.values)
   return _elm.Static.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Static",
   $Basics = Elm.Basics.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var emails = _L.fromArray([{_: {}
                              ,body: "Collaboratively administrate empowered markets via plug-and-play\n                networks. Dynamically procrastinate B2C users after installed base\n                benefits. Dramatically visualize customer directed convergence without\n                revolutionary ROI.\n                \n                Efficiently unleash cross-media information without cross-media\n                value. Quickly maximize timely deliverables for real-time\n                schemas. Dramatically maintain clicks-and-mortar solutions\n                without functional solutions.\n                \n                Completely synergize resource taxing relationships via premier\n                niche markets. Professionally cultivate one-to-one customer\n                service with robust ideas. Dynamically innovate\n                resource-leveling customer service for state of the art customer\n                service."
                              ,date: "2015-01-30"
                              ,from: "bossman@corporate.me"
                              ,title: "Corporate Ipsum"
                              ,to: "manager@corporate.me"}
                             ,{_: {}
                              ,body: "This is the body of an email with less than 200 characters."
                              ,date: "2015-09-30"
                              ,from: "hello@test.me"
                              ,title: "Shorter than 200"
                              ,to: "goodbye@test.me"}]);
   var reminders = _L.fromArray([{_: {}
                                 ,body: "Take out the trash"
                                 ,created: "2016-09-30"}
                                ,{_: {}
                                 ,body: "Groceries"
                                 ,created: "2015-09-25"}]);
   var Reminder = F2(function (a,
   b) {
      return {_: {}
             ,body: a
             ,created: b};
   });
   var Email = F5(function (a,
   b,
   c,
   d,
   e) {
      return {_: {}
             ,body: d
             ,date: e
             ,from: a
             ,title: c
             ,to: b};
   });
   _elm.Static.values = {_op: _op
                        ,Email: Email
                        ,Reminder: Reminder
                        ,reminders: reminders
                        ,emails: emails};
   return _elm.Static.values;
};